From 180a7d83f64f01385db659c10ffc454cdb43d536 Mon Sep 17 00:00:00 2001
From: "Edgar E. Iglesias" <edgar.iglesias@amd.com>
Date: Sun, 14 Apr 2024 12:37:53 +0200
Subject: [PATCH 65/70] hw/xen: xen-pvh-common: Add creation of GPEX

Signed-off-by: Edgar E. Iglesias <edgar.iglesias@amd.com>
Change-Id: I430086ed276289cc8535c785524f05ad25d726f7
---
 hw/xen/xen-pvh-common.c         | 63 +++++++++++++++++++++++++++++++++
 include/hw/xen/xen-pvh-common.h | 16 +++++++++
 2 files changed, 79 insertions(+)

diff --git a/hw/xen/xen-pvh-common.c b/hw/xen/xen-pvh-common.c
index 45cfc9f1b8..d1fa6c1170 100644
--- a/hw/xen/xen-pvh-common.c
+++ b/hw/xen/xen-pvh-common.c
@@ -55,6 +55,61 @@ static void xen_pvh_init_ram(MachineState *machine, XenPVHCommonState *s,
     }
 }
 
+static void xen_set_pci_intx_irq(void *opaque, int irq, int level)
+{
+    if (xendevicemodel_set_pci_intx_level(xen_dmod, xen_domid,
+                0, 0, 0, irq % 4, level)) {
+        error_report("xendevicemodel_set_pci_intx_level failed");
+    }
+}
+
+static inline void xenpvh_gpex_init(MachineState *ms,
+                                    XenPVHCommonState *s,
+                                    MemoryRegion *sysmem,
+                                    hwaddr ecam_base, hwaddr ecam_size,
+                                    hwaddr mmio_base, hwaddr mmio_size,
+                                    hwaddr mmio_high_base,
+                                    hwaddr mmio_high_size,
+                                    int intx_irq_base)
+{
+    MemoryRegion *ecam_reg;
+    MemoryRegion *mmio_reg;
+    DeviceState *dev;
+    int i;
+
+    object_initialize_child(OBJECT(ms), "gpex", &s->pci.gpex,
+                            TYPE_GPEX_HOST);
+    dev = DEVICE(&s->pci.gpex);
+    sysbus_realize_and_unref(SYS_BUS_DEVICE(dev), &error_fatal);
+
+    ecam_reg = sysbus_mmio_get_region(SYS_BUS_DEVICE(dev), 0);
+    memory_region_init_alias(&s->pci.ecam_alias, OBJECT(dev), "pcie-ecam",
+                             ecam_reg, 0, ecam_size);
+    memory_region_add_subregion(sysmem, ecam_base, &s->pci.ecam_alias);
+
+    mmio_reg = sysbus_mmio_get_region(SYS_BUS_DEVICE(dev), 1);
+    memory_region_init_alias(&s->pci.mmio_alias, OBJECT(dev), "pcie-mmio",
+                             mmio_reg, mmio_base, mmio_size);
+    memory_region_add_subregion(sysmem, mmio_base, &s->pci.mmio_alias);
+
+    if (mmio_high_size) {
+        memory_region_init_alias(&s->pci.mmio_high_alias, OBJECT(dev),
+                "pcie-mmio-high",
+                mmio_reg, mmio_high_base, mmio_high_size);
+        memory_region_add_subregion(sysmem, mmio_high_base,
+                &s->pci.mmio_high_alias);
+    }
+
+    for (i = 0; i < GPEX_NUM_IRQS; i++) {
+        qemu_irq irq = qemu_allocate_irq(xen_set_pci_intx_irq, NULL,
+                                         intx_irq_base + i);
+
+        sysbus_connect_irq(SYS_BUS_DEVICE(dev), i, irq);
+        gpex_set_irq_num(GPEX_HOST(dev), i, intx_irq_base + i);
+        xen_set_pci_link_route(i, intx_irq_base + i);
+    }
+}
+
 void xen_pvh_common_init(MachineState *machine, XenPVHCommonState *s,
                          MemoryRegion *sysmem)
 {
@@ -67,4 +122,12 @@ void xen_pvh_common_init(MachineState *machine, XenPVHCommonState *s,
 
     xen_pvh_init_ram(machine, s, sysmem);
     xen_register_ioreq(&s->ioreq, machine->smp.cpus, &xen_memory_listener);
+
+    if (s->cfg.pci.ecam.size) {
+        xenpvh_gpex_init(machine, s, sysmem,
+                         s->cfg.pci.ecam.base, s->cfg.pci.ecam.size,
+                         s->cfg.pci.mmio.base, s->cfg.pci.mmio.size,
+                         s->cfg.pci.mmio_high.base, s->cfg.pci.mmio_high.size,
+                         s->cfg.pci.intx_irq_base);
+    }
 }
diff --git a/include/hw/xen/xen-pvh-common.h b/include/hw/xen/xen-pvh-common.h
index 690abc2b1d..cf1958b504 100644
--- a/include/hw/xen/xen-pvh-common.h
+++ b/include/hw/xen/xen-pvh-common.h
@@ -12,6 +12,7 @@
 #include <assert.h>
 #include "hw/hw.h"
 #include "hw/xen/xen-hvm-common.h"
+#include "hw/pci-host/gpex.h"
 
 typedef struct XenPVHCommonState {
     XenIOState ioreq;
@@ -21,9 +22,24 @@ typedef struct XenPVHCommonState {
         MemoryRegion high;
     } ram;
 
+    struct {
+        GPEXHost gpex;
+        MemoryRegion ecam_alias;
+        MemoryRegion mmio_alias;
+        MemoryRegion mmio_high_alias;
+    } pci;
+
     struct {
         MemMapEntry ram_low;
         MemMapEntry ram_high;
+
+        struct {
+            MemMapEntry ecam;
+            MemMapEntry mmio;
+            MemMapEntry mmio_high;
+
+            int intx_irq_base;
+        } pci;
     } cfg;
 } XenPVHCommonState;
 
-- 
2.17.1

