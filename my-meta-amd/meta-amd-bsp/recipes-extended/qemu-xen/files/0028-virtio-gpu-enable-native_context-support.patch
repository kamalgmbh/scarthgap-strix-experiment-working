From 1cb37508e12632b6fc6e8b5b81b8b9ec2a169d5c Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Fri, 23 Feb 2024 11:06:21 +0100
Subject: [PATCH 28/70] virtio-gpu: enable native_context support

---
 hw/display/virtio-gpu-virgl.c               | 19 ++++++++++++++++++-
 hw/display/virtio-gpu.c                     |  2 ++
 include/hw/virtio/virtio-gpu.h              |  4 ++++
 include/standard-headers/linux/virtio_gpu.h |  1 +
 4 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/hw/display/virtio-gpu-virgl.c b/hw/display/virtio-gpu-virgl.c
index 2202662c8b..f549517704 100644
--- a/hw/display/virtio-gpu-virgl.c
+++ b/hw/display/virtio-gpu-virgl.c
@@ -14,6 +14,7 @@
 #include "qemu/osdep.h"
 #include "qemu/error-report.h"
 #include "qemu/iov.h"
+#include "qemu/drm.h"
 #include "trace.h"
 #include "hw/virtio/virtio.h"
 #include "hw/virtio/virtio-gpu.h"
@@ -22,7 +23,8 @@
 
 #include "ui/egl-helpers.h"
 
-#include "ui/egl-helpers.h"
+/* Needs unstable APIs for CAPSET_DRM */
+#define VIRGL_RENDERER_UNSTABLE_APIS 1
 
 #include <virglrenderer.h>
 
@@ -1284,7 +1286,14 @@ int virtio_gpu_virgl_init(VirtIOGPU *g)
     flags |= VIRGL_RENDERER_VENUS | VIRGL_RENDERER_RENDER_SERVER;
 #endif
 
+#ifdef VIRGL_RENDERER_DRM
+    /* Override other flags for now. */
+    if (virtio_gpu_native_context_enabled(g->parent_obj.conf))
+        flags = VIRGL_RENDERER_ASYNC_FENCE_CB | VIRGL_RENDERER_DRM;
+#endif
+
     ret = virgl_renderer_init(g, flags, &virtio_gpu_3d_cbs);
+
     if (ret != 0) {
         error_report("virgl could not be initialized: %d", ret);
         return ret;
@@ -1337,5 +1346,13 @@ int virtio_gpu_virgl_get_num_capsets(VirtIOGPU *g)
         num_capsets++;
     }
 
+    virgl_renderer_get_cap_set(VIRTIO_GPU_CAPSET_DRM,
+                               &capset2_max_ver,
+                               &capset2_max_size);
+    if (capset2_max_size) {
+        g->supported_capset_ids[num_capsets] = VIRTIO_GPU_CAPSET_DRM;
+        num_capsets++;
+    }
+
     return num_capsets;
 }
diff --git a/hw/display/virtio-gpu.c b/hw/display/virtio-gpu.c
index 5307206432..fa61f1c860 100644
--- a/hw/display/virtio-gpu.c
+++ b/hw/display/virtio-gpu.c
@@ -1707,6 +1707,8 @@ static Property virtio_gpu_properties[] = {
 #ifdef HAVE_VIRGL_CONTEXT_CREATE_WITH_FLAGS
     DEFINE_PROP_BIT("context_init", VirtIOGPU, parent_obj.conf.flags,
                     VIRTIO_GPU_FLAG_CONTEXT_INIT_ENABLED, true),
+    DEFINE_PROP_BIT("native_context", VirtIOGPU, parent_obj.conf.flags,
+                    VIRTIO_GPU_FLAG_NATIVE_CONTEXT_ENABLED, true),
 #endif
     DEFINE_PROP_END_OF_LIST(),
 };
diff --git a/include/hw/virtio/virtio-gpu.h b/include/hw/virtio/virtio-gpu.h
index 21b690335a..caa3ca3976 100644
--- a/include/hw/virtio/virtio-gpu.h
+++ b/include/hw/virtio/virtio-gpu.h
@@ -92,6 +92,7 @@ enum virtio_gpu_base_conf_flags {
     VIRTIO_GPU_FLAG_BLOB_ENABLED,
     VIRTIO_GPU_FLAG_CONTEXT_INIT_ENABLED,
     VIRTIO_GPU_FLAG_RESOURCE_UUID_ENABLED,
+    VIRTIO_GPU_FLAG_NATIVE_CONTEXT_ENABLED,
 };
 
 #define virtio_gpu_virgl_enabled(_cfg) \
@@ -110,6 +111,9 @@ enum virtio_gpu_base_conf_flags {
     (_cfg.flags & (1 << VIRTIO_GPU_FLAG_RESOURCE_UUID_ENABLED))
 #define virtio_gpu_hostmem_enabled(_cfg) \
     (_cfg.hostmem > 0)
+#define virtio_gpu_native_context_enabled(_cfg) \
+    ((_cfg.flags & (1 << VIRTIO_GPU_FLAG_NATIVE_CONTEXT_ENABLED) && \
+     virtio_gpu_hostmem_enabled(_cfg) && virtio_gpu_context_init_enabled(_cfg)))
 
 struct virtio_gpu_base_conf {
     uint32_t max_outputs;
diff --git a/include/standard-headers/linux/virtio_gpu.h b/include/standard-headers/linux/virtio_gpu.h
index 5a81684b32..2f22a89967 100644
--- a/include/standard-headers/linux/virtio_gpu.h
+++ b/include/standard-headers/linux/virtio_gpu.h
@@ -324,6 +324,7 @@ struct virtio_gpu_cmd_submit {
 #define VIRTIO_GPU_CAPSET_VIRGL2 2
 /* 3 is reserved for gfxstream */
 #define VIRTIO_GPU_CAPSET_VENUS 4
+#define VIRTIO_GPU_CAPSET_DRM 6
 
 /* VIRTIO_GPU_CMD_GET_CAPSET_INFO */
 struct virtio_gpu_get_capset_info {
-- 
2.17.1

