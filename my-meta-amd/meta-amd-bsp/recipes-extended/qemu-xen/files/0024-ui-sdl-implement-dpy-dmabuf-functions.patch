From 20e865a35e97e09df382703ee981f726ef42601e Mon Sep 17 00:00:00 2001
From: Pierre-Eric Pelloux-Prayer <pierre-eric.pelloux-prayer@amd.com>
Date: Fri, 10 Mar 2023 13:07:41 +0100
Subject: [PATCH 24/70] ui/sdl: implement dpy dmabuf functions

If EGL is used we can rely on dmabuf to import textures
without doing copies.

To get this working on X11, we use the existing SDL
hint: SDL_HINT_VIDEO_X11_FORCE_EGL (because dmabuf
can't be used with GLX).
---
 include/ui/sdl2.h |  5 +++++
 ui/sdl2-gl.c      | 35 +++++++++++++++++++++++++++++++++++
 ui/sdl2.c         | 24 +++++++++++++++++++++++-
 3 files changed, 63 insertions(+), 1 deletion(-)

diff --git a/include/ui/sdl2.h b/include/ui/sdl2.h
index 8fb7e08262..924005755c 100644
--- a/include/ui/sdl2.h
+++ b/include/ui/sdl2.h
@@ -93,5 +93,10 @@ void sdl2_gl_scanout_texture(DisplayChangeListener *dcl,
                              uint32_t w, uint32_t h);
 void sdl2_gl_scanout_flush(DisplayChangeListener *dcl,
                            uint32_t x, uint32_t y, uint32_t w, uint32_t h);
+void sdl2_gl_scanout_dmabuf(DisplayChangeListener *dcl,
+                            QemuDmaBuf *dmabuf);
+void sdl2_gl_release_dmabuf(DisplayChangeListener *dcl,
+                            QemuDmaBuf *dmabuf);
+bool sdl2_gl_has_dmabuf(DisplayChangeListener *dcl);
 
 #endif /* SDL2_H */
diff --git a/ui/sdl2-gl.c b/ui/sdl2-gl.c
index bbfa70eac3..be07f18f79 100644
--- a/ui/sdl2-gl.c
+++ b/ui/sdl2-gl.c
@@ -26,6 +26,7 @@
  */
 
 #include "qemu/osdep.h"
+#include "qemu/main-loop.h"
 #include "ui/console.h"
 #include "ui/input.h"
 #include "ui/sdl2.h"
@@ -223,6 +224,39 @@ void sdl2_gl_scanout_texture(DisplayChangeListener *dcl,
                          backing_id, false);
 }
 
+void sdl2_gl_scanout_dmabuf(DisplayChangeListener *dcl,
+                            QemuDmaBuf *dmabuf)
+{
+    struct sdl2_console *scon = container_of(dcl, struct sdl2_console, dcl);
+
+    assert(scon->opengl);
+    SDL_GL_MakeCurrent(scon->real_window, scon->winctx);
+
+    egl_dmabuf_import_texture(dmabuf);
+    if (!dmabuf->texture) {
+        fprintf(stderr, "sdl2_gl_scanout_dmabuf failed fd=%d\n", dmabuf->fd);
+    }
+
+    sdl2_gl_scanout_texture(dcl, dmabuf->texture,
+                            false, dmabuf->width, dmabuf->height,
+                            0, 0, dmabuf->width, dmabuf->height);
+
+    if (dmabuf->allow_fences) {
+        scon->guest_fb.dmabuf = dmabuf;
+    }
+}
+
+void sdl2_gl_release_dmabuf(DisplayChangeListener *dcl,
+                            QemuDmaBuf *dmabuf)
+{
+    egl_dmabuf_release_texture(dmabuf);
+}
+
+bool sdl2_gl_has_dmabuf(DisplayChangeListener *dcl)
+{
+    return qemu_egl_has_dmabuf();
+}
+
 void sdl2_gl_scanout_flush(DisplayChangeListener *dcl,
                            uint32_t x, uint32_t y, uint32_t w, uint32_t h)
 {
@@ -237,6 +271,7 @@ void sdl2_gl_scanout_flush(DisplayChangeListener *dcl,
         return;
     }
 
+    /* Drawing is synchronous here, so no need to use graphic_hw_gl_block. */
     SDL_GL_MakeCurrent(scon->real_window, scon->winctx);
 
     SDL_GetWindowSize(scon->real_window, &ww, &wh);
diff --git a/ui/sdl2.c b/ui/sdl2.c
index 9d703200bf..92cfd5112b 100644
--- a/ui/sdl2.c
+++ b/ui/sdl2.c
@@ -64,6 +64,7 @@ static Notifier mouse_mode_notifier;
 #endif
 
 static void sdl_update_caption(struct sdl2_console *scon);
+static void sdl2_enable_dmabuf_scanout(void);
 
 static struct sdl2_console *get_scon_from_window(uint32_t window_id)
 {
@@ -119,6 +120,11 @@ void sdl2_window_create(struct sdl2_console *scon)
     if (scon->opengl) {
         scon->winctx = SDL_GL_CreateContext(scon->real_window);
     }
+
+    qemu_egl_display = eglGetCurrentDisplay();
+    if (qemu_egl_has_dmabuf())
+        sdl2_enable_dmabuf_scanout();
+
     sdl_update_caption(scon);
 }
 
@@ -794,7 +800,7 @@ static const DisplayChangeListenerOps dcl_2d_ops = {
 };
 
 #ifdef CONFIG_OPENGL
-static const DisplayChangeListenerOps dcl_gl_ops = {
+static DisplayChangeListenerOps dcl_gl_ops = {
     .dpy_name                = "sdl2-gl",
     .dpy_gfx_update          = sdl2_gl_update,
     .dpy_gfx_switch          = sdl2_gl_switch,
@@ -806,8 +812,22 @@ static const DisplayChangeListenerOps dcl_gl_ops = {
     .dpy_gl_scanout_disable  = sdl2_gl_scanout_disable,
     .dpy_gl_scanout_texture  = sdl2_gl_scanout_texture,
     .dpy_gl_update           = sdl2_gl_scanout_flush,
+
+    /* Will be overriden from sdl2_window_create if dmabuf
+     * support is available.
+     */
+    .dpy_gl_scanout_dmabuf   = NULL,
+    .dpy_gl_release_dmabuf   = NULL,
+    .dpy_has_dmabuf          = NULL,
 };
 
+static void sdl2_enable_dmabuf_scanout(void)
+{
+    dcl_gl_ops.dpy_gl_scanout_dmabuf = sdl2_gl_scanout_dmabuf;
+    dcl_gl_ops.dpy_gl_release_dmabuf = sdl2_gl_release_dmabuf;
+    dcl_gl_ops.dpy_has_dmabuf        = sdl2_gl_has_dmabuf;
+}
+
 static bool
 sdl2_gl_is_compatible_dcl(DisplayGLCtx *dgc,
                           DisplayChangeListener *dcl)
@@ -863,6 +883,8 @@ static void sdl2_display_init(DisplayState *ds, DisplayOptions *o)
     SDL_SetHint(SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED, "0");
 #endif
     SDL_SetHint(SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4, "1");
+    SDL_SetHint(SDL_HINT_VIDEO_X11_FORCE_EGL, "1");
+
     memset(&info, 0, sizeof(info));
     SDL_VERSION(&info.version);
 
-- 
2.17.1

