From 03458ead5bd2c16574ad38e386678644418b6877 Mon Sep 17 00:00:00 2001
From: Prike Liang <Prike.Liang@amd.com>
Date: Mon, 21 Aug 2023 09:52:16 +0800
Subject: [PATCH 215/221] tools/libxc: introduce __HYPERVISOR_amd_boco_op for
 passthrough device D3cold support

Introduce the hypervisor operation __HYPERVISOR_amd_boco_op for passthrough AMD
GPU D3cold support. This hypercall interface will be exported to the QEMU passthrough
read and write function operation. When the passthrough GPU write or read request is
intercepted then will request the hypercall to enter or exit D3cold power state.

Signed-off-by: Prike Liang <Prike.Liang@amd.com>
Signed-off-by: Ramesh Babu Nalluri <rameshbabu.nalluri@amd.com>
Change-Id: Ice4a65e4ec32b6922c8f0248503da2a4218c1ee7
---
 tools/include/xenctrl.h      |  4 ++++
 tools/libs/ctrl/xc_private.c | 17 +++++++++++++++++
 xen/include/public/xen.h     |  1 +
 3 files changed, 22 insertions(+)

diff --git a/tools/include/xenctrl.h b/tools/include/xenctrl.h
index 3918be9e53..b1a9e7fdda 100644
--- a/tools/include/xenctrl.h
+++ b/tools/include/xenctrl.h
@@ -1628,6 +1628,10 @@ int xc_gnttab_op(xc_interface *xch, int cmd,
                  void * op, int op_size, int count);
 /* Logs iff hypercall bounce fails, otherwise doesn't. */
 
+int xc_pci_d3cold_op(xc_interface *xch, uint32_t domid,
+                        uint16_t vendor_id, uint16_t device_id,
+                        uint64_t power_state);
+
 int xc_gnttab_query_size(xc_interface *xch, struct gnttab_query_size *query);
 int xc_gnttab_get_version(xc_interface *xch, uint32_t domid); /* Never logs */
 grant_entry_v1_t *xc_gnttab_map_table_v1(xc_interface *xch, uint32_t domid, int *gnt_num);
diff --git a/tools/libs/ctrl/xc_private.c b/tools/libs/ctrl/xc_private.c
index 2f99a7d2cf..3708271ccc 100644
--- a/tools/libs/ctrl/xc_private.c
+++ b/tools/libs/ctrl/xc_private.c
@@ -267,6 +267,23 @@ int xc_mmuext_op(
     return ret;
 }
 
+int xc_pci_d3cold_op(xc_interface *xch, uint32_t domid,
+                                    uint16_t vendor_id, uint16_t device_id,
+                                    uint64_t power_state)
+{
+    int ret = 0;
+
+#if defined(__linux__)
+
+    ret = xencall4(xch->xcall, __HYPERVISOR_amd_boco_op,
+                    domid, vendor_id, device_id, power_state);
+    if (ret < 0)
+            return -1;
+#endif /* __linux__ */
+
+    return ret;
+}
+
 static int flush_mmu_updates(xc_interface *xch, struct xc_mmu *mmu)
 {
     int rc, err = 0;
diff --git a/xen/include/public/xen.h b/xen/include/public/xen.h
index 920567e006..4004bc0068 100644
--- a/xen/include/public/xen.h
+++ b/xen/include/public/xen.h
@@ -114,6 +114,7 @@ DEFINE_XEN_GUEST_HANDLE(xen_ulong_t);
 #define __HYPERVISOR_xenpmu_op            40
 #define __HYPERVISOR_dm_op                41
 #define __HYPERVISOR_hypfs_op             42
+#define __HYPERVISOR_amd_boco_op          43
 
 /* Architecture-specific hypercall definitions. */
 #define __HYPERVISOR_arch_0               48
-- 
2.17.1

