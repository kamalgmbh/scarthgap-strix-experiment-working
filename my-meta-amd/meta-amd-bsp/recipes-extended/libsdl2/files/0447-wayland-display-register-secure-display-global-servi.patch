From fc98ba22004e20e44f4452b2a789d6437a8efee0 Mon Sep 17 00:00:00 2001
From: Sophia Gong <lili.gong@amd.com>
Date: Wed, 14 Jun 2023 08:19:32 +0800
Subject: [PATCH 447/458] wayland display: register secure display global
 service

Signed-off-by: Sophia Gong <lili.gong@amd.com>
Change-Id: I1ae20f87b0e596273f652bdf7c477e174c8453c4
---
 src/video/wayland/SDL_waylandvideo.c | 9 +++++++++
 src/video/wayland/SDL_waylandvideo.h | 2 ++
 2 files changed, 11 insertions(+)

diff --git a/src/video/wayland/SDL_waylandvideo.c b/src/video/wayland/SDL_waylandvideo.c
index 00ee25a4d..6b9ab2d5e 100644
--- a/src/video/wayland/SDL_waylandvideo.c
+++ b/src/video/wayland/SDL_waylandvideo.c
@@ -57,6 +57,7 @@
 #include "viewporter-client-protocol.h"
 #include "primary-selection-unstable-v1-client-protocol.h"
 #include "fractional-scale-v1-client-protocol.h"
+#include "secure-display-unstable-v1-client-protocol.h"
 
 #ifdef HAVE_LIBDECOR_H
 #include <libdecor.h>
@@ -715,6 +716,9 @@ static void Wayland_add_display(SDL_VideoData *d, uint32_t id)
         data->xdg_output = zxdg_output_manager_v1_get_xdg_output(data->videodata->xdg_output_manager, output);
         zxdg_output_v1_add_listener(data->xdg_output, &xdg_output_listener, data);
     }
+
+    if (data->videodata->secure_manager)
+        data->secure_crtc = secure_display_manager_v1_create_secure_output(data->videodata->secure_manager, output);
 }
 
 static void Wayland_free_display(SDL_VideoData *d, uint32_t id)
@@ -745,6 +749,9 @@ static void Wayland_free_display(SDL_VideoData *d, uint32_t id)
             if (data->xdg_output) {
                 zxdg_output_v1_destroy(data->xdg_output);
             }
+	    if (data->secure_crtc) {
+                secure_display_crtc_v1_destroy(data->secure_crtc);
+	    }
             wl_output_destroy(data->output);
             SDL_free(data->name);
             SDL_free(display->output);
@@ -856,6 +863,8 @@ static void display_handle_global(void *data, struct wl_registry *registry, uint
         version = SDL_min(version, 3); /* Versions 1 through 3 are supported. */
         d->xdg_output_manager = wl_registry_bind(d->registry, id, &zxdg_output_manager_v1_interface, version);
         Wayland_init_xdg_output(d);
+    } else if (SDL_strcmp(interface, "secure_display_manager_v1") == 0) {
+        d->secure_manager = wl_registry_bind(d->registry, id, &secure_display_manager_v1_interface, 1);
     } else if (SDL_strcmp(interface, "wp_viewporter") == 0) {
         d->viewporter = wl_registry_bind(d->registry, id, &wp_viewporter_interface, 1);
     } else if (SDL_strcmp(interface, "wp_fractional_scale_manager_v1") == 0) {
diff --git a/src/video/wayland/SDL_waylandvideo.h b/src/video/wayland/SDL_waylandvideo.h
index be6cb8fb0..751b1ffb7 100644
--- a/src/video/wayland/SDL_waylandvideo.h
+++ b/src/video/wayland/SDL_waylandvideo.h
@@ -80,6 +80,7 @@ typedef struct
     struct zxdg_output_manager_v1 *xdg_output_manager;
     struct wp_viewporter *viewporter;
     struct wp_fractional_scale_manager_v1 *fractional_scale_manager;
+    struct secure_display_manager_v1 *secure_manager;
 
     EGLDisplay edpy;
     EGLContext context;
@@ -108,6 +109,7 @@ struct SDL_WaylandOutputData
     struct wl_output *output;
     char *name;
     struct zxdg_output_v1 *xdg_output;
+    struct secure_display_crtc_v1 *secure_crtc;
     uint32_t registry_id;
     float scale_factor;
     int native_width, native_height;
-- 
2.17.1

